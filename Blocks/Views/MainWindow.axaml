<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Blocks.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="800"
        x:Class="Blocks.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="Blocks">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>
    <Border Background="{DynamicResource BlockWindowBackgroundBrush}"
            Padding="20">
        <StackPanel Spacing="20">
            <StackPanel Spacing="20" Orientation="Horizontal">
                <StackPanel Spacing="10">
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top">Basic Button</Button>
                    <Button HorizontalAlignment="Left" IsEnabled="False" VerticalAlignment="Top">Basic Button</Button>
                </StackPanel>
                <StackPanel Spacing="10">
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Classes="outline">Outlined Button</Button>
                    <Button HorizontalAlignment="Left" IsEnabled="False" VerticalAlignment="Top" Classes="outline">Outlined Button</Button>
                </StackPanel>
                <StackPanel Spacing="10">
                    <Button Classes="image-button" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Path Data="{StaticResource BlockTestIcon}"
                              Width="{DynamicResource BlockIconSize}"
                              Height="{DynamicResource BlockIconSize}"
                              Stretch="Uniform"
                              Fill="{Binding $parent[Button].Foreground}" />
                    </Button>
                    <Button Classes="image-button" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="False">
                        <Path Data="{StaticResource BlockTestIcon}"
                              Width="{DynamicResource BlockIconSize}"
                              Height="{DynamicResource BlockIconSize}"
                              Stretch="Uniform"
                              Fill="{Binding $parent[Button].Foreground}" />
                    </Button>
                </StackPanel>
                <StackPanel Spacing="10">
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Classes="flat">Flat Button</Button>
                    <Button HorizontalAlignment="Left" IsEnabled="False" VerticalAlignment="Top" Classes="flat">Flat Button</Button>
                </StackPanel>
                <StackPanel Spacing="10">
                    <Button Classes="flat image-button" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Path Data="{StaticResource BlockTestIcon}"
                              Width="{DynamicResource BlockIconSize}"
                              Height="{DynamicResource BlockIconSize}"
                              Stretch="Uniform"
                              Fill="{Binding $parent[Button].Foreground}" />
                    </Button>
                    <Button Classes="flat image-button" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="False">
                        <Path Data="{StaticResource BlockTestIcon}"
                              Width="{DynamicResource BlockIconSize}"
                              Height="{DynamicResource BlockIconSize}"
                              Stretch="Uniform"
                              Fill="{Binding $parent[Button].Foreground}" />
                    </Button>
                </StackPanel>
            </StackPanel>
            <StackPanel Spacing="20" Orientation="Horizontal">
                <StackPanel Spacing="10" Orientation="Vertical">
                    <ButtonSpinner MinWidth="120" VerticalAlignment="Top">Button Spinner</ButtonSpinner>
                    <ButtonSpinner MinWidth="120" VerticalAlignment="Top" IsEnabled="False">Button Spinner</ButtonSpinner>
                </StackPanel>
                <StackPanel Spacing="10" Orientation="Horizontal">
                    <ButtonSpinner MinHeight="120" Classes="vertical" VerticalAlignment="Top">10</ButtonSpinner>
                    <ButtonSpinner MinHeight="120" Classes="vertical" VerticalAlignment="Top" IsEnabled="False">10</ButtonSpinner>
                </StackPanel>
            </StackPanel>
            <StackPanel Spacing="20" Orientation="Horizontal">
                <StackPanel Spacing="10">
                    <RadioButton GroupName="Radio">Radio</RadioButton>
                    <RadioButton IsChecked="True" Classes="left-label" HorizontalAlignment="Left" GroupName="Radio">Checked - Label on the Left</RadioButton>
                    <RadioButton IsEnabled="False" GroupName="DisabledRadio">Disabled</RadioButton>
                    <RadioButton IsChecked="True" IsEnabled="False" GroupName="DisabledRadio">Disabled - Checked</RadioButton>
                </StackPanel>
                <StackPanel Spacing="10">
                    <CheckBox>Check Box</CheckBox>
                    <CheckBox IsThreeState="True" IsChecked="{x:Null}">Indeterminate</CheckBox>
                    <CheckBox IsChecked="True" Classes="top-label" HorizontalAlignment="Left">Checked - Label on the top</CheckBox>
                    <CheckBox IsEnabled="False">Disabled</CheckBox>
                    <CheckBox IsChecked="True" IsEnabled="False">Disabled - Checked</CheckBox>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </Border>

</Window>