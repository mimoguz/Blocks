<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:blk="clr-namespace:Blocks.Controls"
                    xmlns:conv="clr-namespace:Blocks.Converters">
    <Design.PreviewWith>
        <Border Background="{DynamicResource BlockWindowBackgroundBrush}" Padding="20">
            <StackPanel Spacing="10">
                <CheckBox>Check Box</CheckBox>
                <CheckBox IsChecked="True"
                          Classes="left-label"
                          HorizontalAlignment="Left">
                    Checked
                </CheckBox>
                <CheckBox IsChecked="{x:Null}" IsThreeState="True"
                          Background="DarkMagenta"
                          BorderBrush="Fuchsia"
                          Foreground="BlueViolet"
                          blk:Block.Gap="20,100">
                    Indeterminate
                </CheckBox>
                <CheckBox IsEnabled="False" Classes="top-label">Disabled</CheckBox>
                <CheckBox IsChecked="True" blk:Block.Gap="100,12" IsEnabled="False" Classes="bottom-label">Disabled - Checked</CheckBox>
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <!-- ****************************************************** -->
    <!-- ********************* Resources ********************** -->
    <!-- ****************************************************** -->

    <SolidColorBrush x:Key="BlockCheckBoxBaseBackgroundBrush"
                     Color="{DynamicResource BlockBaseButtonBackgroundColor}" />

    <SolidColorBrush x:Key="BlockCheckBoxIndeterminateMarkBrush"
                     Color="{DynamicResource BlockButtonForegroundColor}" />

    <SolidColorBrush x:Key="BlockCheckBoxCheckMarkBrush"
                     Color="{DynamicResource BlockBasePrimaryColor}" />

    <SolidColorBrush x:Key="BlockCheckBoxForegroundBrush"
                     Color="{DynamicResource BlockWindowForegroundColor}" />

    <CornerRadius x:Key="BlockCheckBoxCornerRadius">6</CornerRadius>

    <!-- ****************************************************** -->
    <!-- ********************** Themes ************************ -->
    <!-- ****************************************************** -->

    <ControlTheme x:Key="{x:Type CheckBox}"
                  TargetType="CheckBox">

        <Setter Property="BorderThickness" Value="{DynamicResource BlockControlBorderThickness}" />
        <Setter Property="Foreground" Value="{DynamicResource BlockCheckBoxForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource BlockCheckBoxBaseBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlockCheckBoxIndeterminateMarkBrush}" />
        <Setter Property="CornerRadius" Value="{DynamicResource BlockCheckBoxCornerRadius}" />
        <Setter Property="Padding" Value="{DynamicResource BlockRadioButtonPadding}" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Left" />

        <Setter Property="blk:Block.Gap" Value="{DynamicResource BlockRadioButtonGap}" />

        <Setter Property="Template">
            <ControlTemplate>
                <Border Background="Transparent"
                        Padding="{TemplateBinding Padding}"
                        Name="BaseContainer">
                    <DockPanel Background="Transparent">
                        <Panel Name="Radio"
                               DockPanel.Dock="Left"
                               Width="{DynamicResource BlockRadioButtonSize}"
                               Height="{DynamicResource BlockRadioButtonSize}"
                               HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <blk:BlockButtonBackground Name="ButtonBackground"
                                                       Background="{TemplateBinding Background}"
                                                       CornerRadius="{TemplateBinding CornerRadius}" />
                            <PathIcon Name="CheckMark"
                                      Data="{DynamicResource BlockCheckMark}"
                                      Foreground="{DynamicResource BlockCheckBoxCheckMarkBrush}"
                                      Opacity="0"
                                      Classes="block-icon"
                                      RenderTransform="skewX(20deg)">
                                <PathIcon.Transitions>
                                    <Transitions>
                                        <TransformOperationsTransition Property="RenderTransform"
                                                                       Duration="{DynamicResource BlockButtonStateTransitionDuration}"
                                                                       Easing="CubicEaseOut" />
                                        <DoubleTransition Property="Opacity"
                                                          Duration="{DynamicResource BlockLongStateTransitionDuration}"
                                                          Easing="CubicEaseOut" />
                                    </Transitions>
                                </PathIcon.Transitions>
                            </PathIcon>
                            <Rectangle Name="IndeterminateMark"
                                       Width="0"
                                       Height="2"
                                       Fill="{TemplateBinding BorderBrush}"
                                       Opacity="0">
                                <Rectangle.Transitions>
                                    <Transitions>
                                        <DoubleTransition Property="Width"
                                                          Duration="{DynamicResource BlockLongStateTransitionDuration}"
                                                          Easing="CubicEaseOut" />
                                    </Transitions>
                                </Rectangle.Transitions>
                            </Rectangle>
                        </Panel>
                        <ContentPresenter Name="PART_ContentPresenter"
                                          Margin="{TemplateBinding blk:Block.Gap, Converter={x:Static conv:BlockConverters.SelectLeftThickness}}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="True" />
                    </DockPanel>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover /template/ blk|BlockButtonBackground#ButtonBackground">
            <Setter Property="Highlighted" Value="True" />
        </Style>

        <Style Selector="^:pressed /template/ blk|BlockButtonBackground#ButtonBackground">
            <Setter Property="Shaded" Value="True" />
        </Style>

        <Style Selector="^:disabled /template/ Border#BaseContainer">
            <Setter Property="Opacity" Value="{DynamicResource BlockDisabledOpacity}" />
        </Style>

        <Style Selector="^:focus-visible /template/ blk|BlockButtonBackground#ButtonBackground">
            <Setter Property="Focused" Value="True" />
        </Style>

        <Style Selector="^:checked /template/ PathIcon#CheckMark">
            <Setter Property="RenderTransform" Value="{x:Null}" />
            <Setter Property="Opacity" Value="1" />
        </Style>

        <Style Selector="^:indeterminate /template/ Rectangle#IndeterminateMark">
            <Setter Property="Width" Value="{DynamicResource BlockIconSize}" />
            <Setter Property="Opacity" Value="1"></Setter>
        </Style>

        <Style Selector="^.left-label">
            <Style Selector="^ /template/ Panel#Radio">
                <Setter Property="DockPanel.Dock" Value="Right" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Margin"
                        Value="{TemplateBinding blk:Block.Gap, Converter={x:Static conv:BlockConverters.SelectRightThickness}}" />
            </Style>
        </Style>

        <Style Selector="^.top-label">
            <Style Selector="^ /template/ Panel#Radio">
                <Setter Property="DockPanel.Dock" Value="Bottom" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Margin"
                        Value="{TemplateBinding blk:Block.Gap, Converter={x:Static conv:BlockConverters.SelectBottomThickness}}" />
            </Style>
        </Style>

        <Style Selector="^.bottom-label">
            <Style Selector="^ /template/ Panel#Radio">
                <Setter Property="DockPanel.Dock" Value="Top" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Margin"
                        Value="{TemplateBinding blk:Block.Gap, Converter={x:Static conv:BlockConverters.SelectTopThickness}}" />
            </Style>
        </Style>

    </ControlTheme>
</ResourceDictionary>