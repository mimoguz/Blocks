<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="using:System"
                    xmlns:blk="clr-namespace:Blocks.Controls"
                    xmlns:conv="clr-namespace:Blocks.Converters">
    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel Spacing="10">
                <ComboBox PlaceholderText="Select an item">
                    <ComboBox.Resources>
                        <SolidColorBrush x:Key="BlockComboBoxActiveChevronBrush" Color="LimeGreen" />
                    </ComboBox.Resources>
                    <ComboBoxItem>Item 1</ComboBoxItem>
                    <ComboBoxItem>Item 2</ComboBoxItem>
                </ComboBox>
                <ComboBox IsEnabled="False"
                          Width="200"
                          SelectedIndex="1"
                          HorizontalContentAlignment="Center">
                    <ComboBoxItem>Item 1</ComboBoxItem>
                    <ComboBoxItem>Item 2</ComboBoxItem>
                </ComboBox>
                <ComboBox PlaceholderText="Error">
                    <DataValidationErrors.Error>
                        <sys:Exception>
                            <x:Arguments>
                                <x:String>Error</x:String>
                            </x:Arguments>
                        </sys:Exception>
                    </DataValidationErrors.Error>
                </ComboBox>
            </StackPanel>
        </Border>
    </Design.PreviewWith>

    <!-- ****************************************************** -->
    <!-- ********************* Resources ********************** -->
    <!-- ****************************************************** -->

    <SolidColorBrush x:Key="BlockComboBoxBaseBackgroundBrush"
                     Color="{DynamicResource BlockBaseButtonBackgroundColor}" />

    <SolidColorBrush x:Key="BlockComboBoxForegroundBrush"
                     Color="{DynamicResource BlockButtonForegroundColor}" />

    <SolidColorBrush x:Key="BlockComboBoxErrorForegroundBrush"
                     Color="{DynamicResource BlockRed}" />

    <SolidColorBrush x:Key="BlockComboBoxErrorPlaceholderForegroundBrush"
                     Color="{DynamicResource BlockRed}"
                     Opacity="{DynamicResource BlockPlaceholderOpacity}" />

    <SolidColorBrush x:Key="BlockComboBoxPlaceholderForegroundBrush"
                     Color="{DynamicResource BlockButtonForegroundColor}"
                     Opacity="{DynamicResource BlockPlaceholderOpacity}" />

    <SolidColorBrush x:Key="BlockComboBoxFlatForegroundBrush"
                     Color="{DynamicResource BlockFlatButtonForegroundColor}" />

    <SolidColorBrush x:Key="BlockComboBoxFlatPlaceholderForegroundBrush"
                     Color="{DynamicResource BlockFlatButtonForegroundColor}"
                     Opacity="{DynamicResource BlockPlaceholderOpacity}" />

    <SolidColorBrush x:Key="BlockComboBoxPopupBackgroundBrush"
                     Color="{DynamicResource BlockRaisedBackgroundColor}" />

    <SolidColorBrush x:Key="BlockComboBoxPopupBorderBrush"
                     Color="{DynamicResource BlockBaseViewBorderColor}"
                     Opacity="{DynamicResource BlockFlyoutBorderOpacity}" />

    <SolidColorBrush x:Key="BlockComboBoxActiveChevronBrush"
                     Color="{DynamicResource BlockBasePrimaryColor}" />

    <Thickness x:Key="BlockComboBoxPadding">16,8</Thickness>
    <Thickness x:Key="BlockDComboBoxnChevronMargin">0,0,8,0</Thickness>
    
    <blk:AnimatedMenuIconStyle x:Key="BlockComboBoxMenuIconStyle">Chevron</blk:AnimatedMenuIconStyle>

    <!-- ****************************************************** -->
    <!-- ********************** Themes ************************ -->
    <!-- ****************************************************** -->


    <ControlTheme x:Key="{x:Type ComboBox}" TargetType="ComboBox">

        <Setter Property="Background" Value="{DynamicResource BlockComboBoxBaseBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlockComboBoxForegroundBrush}" />
        <Setter Property="PlaceholderForeground" Value="{DynamicResource BlockComboBoxPlaceholderForegroundBrush}" />
        <Setter Property="Padding" Value="{DynamicResource BlockComboBoxPadding}" />
        <Setter Property="CornerRadius" Value="{DynamicResource BlockButtonCornerRadius}" />
        <Setter Property="FontWeight" Value="{DynamicResource BlockButtonFontWeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="MinHeight" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="MaxDropDownHeight" Value="{DynamicResource BlockMaxDropDownHeight}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />

        <Setter Property="Template">
            <ControlTemplate>
                <Panel Name="BaseContainer">
                    <blk:BlockButton Name="ButtonBackground"
                                     Background="{TemplateBinding Background}"
                                     CornerRadius="{TemplateBinding CornerRadius}" />
                    <Grid ColumnDefinitions="*, Auto"
                          IsHitTestVisible="False">
                        <blk:AnimatedMenuIcon Name="MenuIcon"
                                              Grid.Column="1"
                                              Background="{TemplateBinding Foreground}"
                                              Foreground="{DynamicResource BlockComboBoxActiveChevronBrush}"
                                              Margin="{DynamicResource BlockDComboBoxnChevronMargin}"
                                              MenuIconStyle="{DynamicResource BlockComboBoxMenuIconStyle}" />
                        <TextBlock x:Name="PlaceholderTextBlock"
                                   Grid.Column="0"
                                   Padding="{TemplateBinding Padding}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Text="{TemplateBinding PlaceholderText}"
                                   Foreground="{TemplateBinding PlaceholderForeground}"
                                   IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />
                        <ContentControl x:Name="ContentPresenter"
                                        Grid.Column="0"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentControl>
                    </Grid>
                    <Popup Name="PART_Popup"
                           WindowManagerAddShadowHint="False"
                           IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                           MaxHeight="{TemplateBinding MaxDropDownHeight}"
                           PlacementTarget="BaseContainer"
                           IsLightDismissEnabled="True"
                           InheritsTransform="True">
                        <Popup.MinWidth>
                            <MultiBinding Converter="{x:Static conv:BlockConverters.Sum}">
                                <Binding Path="Bounds.Width" RelativeSource="{RelativeSource TemplatedParent}" />
                                <DynamicResource ResourceKey="BlockPopupWidthFix" />
                            </MultiBinding>
                        </Popup.MinWidth>
                        <Border x:Name="PopupBorder"
                                BorderBrush="{DynamicResource BlockComboBoxPopupBorderBrush}"
                                BorderThickness="{DynamicResource BlockFlyoutBorderThickness}"
                                Background="{DynamicResource BlockComboBoxPopupBackgroundBrush}"
                                CornerRadius="{DynamicResource BlockFlyoutCornerRadius}"
                                ClipToBounds="True"
                                Padding="{DynamicResource BlockFlyoutPadding}">
                            <ScrollViewer
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}">
                                <ItemsPresenter Name="PART_ItemsPresenter"
                                                ItemsPanel="{TemplateBinding ItemsPanel}" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Panel>
            </ControlTemplate>
        </Setter>

        <Setter Property="ItemsPanel">
            <ItemsPanelTemplate>
                <StackPanel Spacing="{DynamicResource BlockMenuItemSpacing}" />
            </ItemsPanelTemplate>
        </Setter>

        <Style Selector="^:pointerover /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="Highlighted" Value="True" />
        </Style>

        <Style Selector="^:pressed /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="Shaded" Value="True" />
        </Style>

        <Style Selector="^:disabled /template/ Panel#BaseContainer">
            <Setter Property="Opacity" Value="{DynamicResource BlockDisabledOpacity}" />
        </Style>

        <Style Selector="^:error">
            <Setter Property="Foreground" Value="{DynamicResource BlockComboBoxErrorForegroundBrush}" />
            <Setter Property="PlaceholderForeground" Value="{DynamicResource BlockComboBoxErrorPlaceholderForegroundBrush}" />
        </Style>

        <Style Selector="^:focus-visible /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="Focused" Value="True" />
        </Style>

        <Style Selector="^[IsDropDownOpen=True]">
            <Style Selector="^ /template/ blk|AnimatedMenuIcon">
                <Setter Property="DrawExpanded" Value="True" />
            </Style>
            <Style Selector="^ /template/ blk|BlockButton#ButtonBackground">
                <Setter Property="Shaded" Value="True" />
            </Style>
        </Style>

        <!-- Classes -->

        <Style Selector="^.flat">
            <Style Selector="^ /template/ blk|BlockButton#ButtonBackground">
                <Setter Property="Flat" Value="True" />
            </Style>
            <Setter Property="Foreground" Value="{DynamicResource BlockCheckBoxForegroundBrush}" />
            <Setter Property="PlaceholderForeground"
                    Value="{DynamicResource BlockComboBoxFlatPlaceholderForegroundBrush}" />
        </Style>

        <Style Selector="^.pill-left /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius"
                    Value="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectLeftRadius}}">
            </Setter>
        </Style>

        <Style Selector="^.pill-center /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius" Value="0">
            </Setter>
        </Style>

        <Style Selector="^.pill-right /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius"
                    Value="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectRightRadius}}">
            </Setter>
        </Style>

        <Style Selector="^.pill-top /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius"
                    Value="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectTopRadius}}">
            </Setter>
        </Style>

        <Style Selector="^.pill-bottom /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius"
                    Value="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectBottomRadius}}">
            </Setter>
        </Style>
    </ControlTheme>
</ResourceDictionary>