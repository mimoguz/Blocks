<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <Border Background="{DynamicResource BlockWindowBackgroundColor}" Padding="20">
            <WrapPanel Width="300" ItemSpacing="10" LineSpacing="10">
                <Button>Basic Button</Button>
                <Button Classes="image-button">
                    <Path Data="{StaticResource BlockTestIcon}"
                          Width="{DynamicResource BlockIconSize}"
                          Height="{DynamicResource BlockIconSize}"
                          Stretch="Uniform"
                          Fill="{Binding $parent[Button].Foreground}" />
                </Button>
                <Button Classes="image-button flat">
                    <Path Data="{StaticResource BlockTestIcon}"
                          Width="{DynamicResource BlockIconSize}"
                          Height="{DynamicResource BlockIconSize}"
                          Stretch="Uniform"
                          Fill="{Binding $parent[Button].Foreground}" />
                </Button>
            </WrapPanel>
        </Border>
    </Design.PreviewWith>

    <ControlTheme x:Key="{x:Type Button}"
                  TargetType="Button">

        <Setter Property="Background" Value="{DynamicResource BlockBaseButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlockButtonForegroundBrush}" />
        <Setter Property="Padding" Value="{DynamicResource BlockButtonPadding}" />
        <Setter Property="CornerRadius" Value="{DynamicResource BlockButtonCornerRadius}" />
        <Setter Property="FontWeight" Value="{DynamicResource BlockButtonFontWeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="MinHeight" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />

        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border Name="ButtonBackground"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Opacity="{DynamicResource BlockButtonBackgroundOpacity}"
                            IsHitTestVisible="True" />
                    <Border Name="FocusVisual"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderBrush="{DynamicResource BlockBaseFocusBrush}"
                            BorderThickness="{DynamicResource BlockFocusBorderThickness}" 
                            Opacity="0"/>
                    <ContentPresenter Name="PART_ContentPresenter"
                                      IsHitTestVisible="False"
                                      CornerRadius="{TemplateBinding CornerRadius}"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      RecognizesAccessKey="True"
                                      TextElement.Foreground="{TemplateBinding Foreground}">
                    </ContentPresenter>
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^ /template/ Border">
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Background"
                                     Duration="{DynamicResource BlockButtonStateTransitionDuration}"
                                     Easing="CubicEaseOut" />
                    <BrushTransition Property="BorderBrush"
                                     Duration="{DynamicResource BlockButtonStateTransitionDuration}"
                                     Easing="CubicEaseOut" />
                    <DoubleTransition Property="Opacity"
                                      Duration="{DynamicResource BlockButtonStateTransitionDuration}"
                                      Easing="CubicEaseOut" />
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="^:pointerover /template/ Border#ButtonBackground">
            <Setter Property="Opacity" Value="{DynamicResource BlockButtonHighlightOpacity}" />
        </Style>

        <Style Selector="^:pressed /template/ Border#ButtonBackground">
            <Setter Property="Opacity" Value="{DynamicResource BlockButtonShadeOpacity}" />
        </Style>

        <Style Selector="^:disabled">
            <Setter Property="Opacity" Value="{DynamicResource BlockDisabledOpacity}" />
        </Style>

        <Style Selector="^:focus-visible /template/ Border#FocusVisual">
            <Setter Property="Opacity" Value="{DynamicResource BlockButtonFocusOpacity}" />
        </Style>

        <!-- Classes -->
        <Style Selector="^.image-button">
            <Setter Property="Padding" Value="{DynamicResource BlockImageButtonPadding}" />
        </Style>

        <Style Selector="^.flat">
            <Setter Property="Background" Value="Transparent" />
            <Style Selector="^:pointerover /template/ Border#ButtonBackground">
                <Setter Property="Background" Value="{DynamicResource BlockBaseButtonBackgroundBrush}" />
            </Style>
            <Style Selector="^:pressed /template/ Border#ButtonBackground">
                <Setter Property="Background" Value="{DynamicResource BlockBaseButtonBackgroundBrush}" />
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>