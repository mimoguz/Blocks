<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <Border Background="{DynamicResource BlockWindowBackgroundColor}" Padding="20">
            <WrapPanel Width="300" ItemSpacing="10" LineSpacing="10">
                <Button>Basic Button</Button>
                <Button Classes="flat">Flat Button</Button>
                <Button Classes="destructive">Destructive Button</Button>
                <Button IsDefault="True">Default Button</Button>
                <Button Classes="image-button">
                    <Path Data="{StaticResource BlockTestIcon}"
                          Width="{DynamicResource BlockIconSize}"
                          Height="{DynamicResource BlockIconSize}"
                          Stretch="Uniform"
                          Fill="{Binding $parent[Button].Foreground}" />
                </Button>
                <Button Classes="image-button flat">
                    <Path Data="{StaticResource BlockTestIcon}"
                          Width="{DynamicResource BlockIconSize}"
                          Height="{DynamicResource BlockIconSize}"
                          Stretch="Uniform"
                          Fill="{Binding $parent[Button].Foreground}" />
                </Button>
                <Button Classes="image-button flat destructive">
                    <Path Data="{StaticResource BlockTestIcon}"
                          Width="{DynamicResource BlockIconSize}"
                          Height="{DynamicResource BlockIconSize}"
                          Stretch="Uniform"
                          Fill="{Binding $parent[Button].Foreground}" />
                </Button>
                <StackPanel Orientation="Horizontal" Spacing="1">
                    <Button Classes="pill-left">Left</Button>
                    <Button Classes="pill-center">Center</Button>
                    <Button Classes="pill-right">Right</Button>
                </StackPanel>
            </WrapPanel>
        </Border>
    </Design.PreviewWith>

    <ControlTheme x:Key="{x:Type Button}"
                  TargetType="Button">

        <Setter Property="Background" Value="{DynamicResource BlockBaseButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlockButtonForegroundBrush}" />
        <Setter Property="Padding" Value="{DynamicResource BlockButtonPadding}" />
        <Setter Property="CornerRadius" Value="{DynamicResource BlockButtonCornerRadius}" />
        <Setter Property="FontWeight" Value="{DynamicResource BlockButtonFontWeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="MinHeight" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />

        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border Name="ButtonBackground"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Opacity="{DynamicResource BlockButtonBackgroundOpacity}"
                            IsHitTestVisible="True">
                        <Border.Transitions>
                            <Transitions>
                                <DoubleTransition Property="Opacity"
                                                  Duration="{DynamicResource BlockButtonStateTransitionDuration}"
                                                  Easing="CubicEaseOut" />
                            </Transitions>
                        </Border.Transitions>
                    </Border>
                    <Border Name="FocusVisual"
                            IsHitTestVisible="False"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderBrush="{DynamicResource BlockBaseFocusBrush}"
                            BorderThickness="{DynamicResource BlockFocusBorderThickness}"
                            Opacity="0">
                        <Border.Transitions>
                            <Transitions>
                                <DoubleTransition Property="Opacity"
                                                  Duration="{DynamicResource BlockButtonStateTransitionDuration}"
                                                  Easing="CubicEaseOut" />
                            </Transitions>
                        </Border.Transitions>
                    </Border>
                    <ContentPresenter Name="PART_ContentPresenter"
                                      IsHitTestVisible="False"
                                      CornerRadius="{TemplateBinding CornerRadius}"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      RecognizesAccessKey="True"
                                      TextElement.Foreground="{TemplateBinding Foreground}">
                        <ContentPresenter.Transitions>
                            <Transitions>
                                <BrushTransition Property="Background"
                                                 Duration="{DynamicResource BlockButtonStateTransitionDuration}"
                                                 Easing="CubicEaseOut" />
                            </Transitions>
                        </ContentPresenter.Transitions>
                    </ContentPresenter>
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover /template/ Border#ButtonBackground">
            <Setter Property="Opacity" Value="{DynamicResource BlockButtonHighlightOpacity}" />
        </Style>

        <Style Selector="^:pressed /template/ Border#ButtonBackground">
            <Setter Property="Opacity" Value="{DynamicResource BlockButtonShadeOpacity}" />
        </Style>

        <Style Selector="^:disabled">
            <Setter Property="Opacity" Value="{DynamicResource BlockDisabledOpacity}" />
        </Style>

        <Style Selector="^:focus-visible /template/ Border#FocusVisual">
            <Setter Property="Opacity" Value="{DynamicResource BlockButtonFocusOpacity}" />
        </Style>

        <Style Selector="^[Tag=flyout-open] /template/ Border#ButtonBackground">
            <Setter Property="Opacity" Value="{DynamicResource BlockButtonShadeOpacity}" />
        </Style>

        <!-- Classes -->
        <Style Selector="^.image-button">
            <Setter Property="Padding" Value="{DynamicResource BlockImageButtonPadding}" />
        </Style>

        <Style Selector="^.flat">
            <Setter Property="Foreground" Value="{DynamicResource BlockFlatButtonForegroundBrush}" />
            <Style Selector="^ /template/ Border#ButtonBackground">
                <Setter Property="Opacity" Value="0" />
            </Style>
            <Style Selector="^:pointerover /template/ Border#ButtonBackground">
                <Setter Property="Opacity" Value="{DynamicResource BlockButtonBackgroundOpacity}" />
            </Style>
            <Style Selector="^:pressed /template/ Border#ButtonBackground">
                <Setter Property="Opacity" Value="{DynamicResource BlockButtonHighlightOpacity}" />
            </Style>
        </Style>
        
        <Style Selector="^[Tag=flyout-open].flat /template/ Border#ButtonBackground">
            <Setter Property="Opacity" Value="{DynamicResource BlockButtonHighlightOpacity}" />
        </Style>

        <Style Selector="^.destructive">
            <Setter Property="Background" Value="{DynamicResource BlockBaseDestructiveBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource BlockDestructiveForegroundBrush}" />
            <Style Selector="^ /template/ Border#FocusVisual">
                <Setter Property="BorderBrush" Value="{DynamicResource BlockDestructiveForegroundBrush}" />
            </Style>
        </Style>

        <Style Selector="^.pill-left">
            <Style Selector="^ /template/ Border">
                <Setter Property="CornerRadius"
                        Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftRadius}}">
                </Setter>
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="CornerRadius"
                        Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftRadius}}">
                </Setter>
            </Style>
        </Style>
        
        <Style Selector="^.pill-center">
            <Style Selector="^ /template/ Border">
                <Setter Property="CornerRadius" Value="0">
                </Setter>
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="CornerRadius" Value="0">
                </Setter>
            </Style>
        </Style>
        
        <Style Selector="^.pill-right">
            <Style Selector="^ /template/ Border">
                <Setter Property="CornerRadius"
                        Value="{TemplateBinding CornerRadius, Converter={StaticResource RightRadius}}">
                </Setter>
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="CornerRadius"
                        Value="{TemplateBinding CornerRadius, Converter={StaticResource RightRadius}}">
                </Setter>
            </Style>
        </Style>
        
        <Style Selector="^.pill-top">
            <Style Selector="^ /template/ Border">
                <Setter Property="CornerRadius"
                        Value="{TemplateBinding CornerRadius, Converter={StaticResource TopRadius}}">
                </Setter>
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="CornerRadius"
                        Value="{TemplateBinding CornerRadius, Converter={StaticResource TopRadius}}">
                </Setter>
            </Style>
        </Style>
        
        <Style Selector="^.pill-bottom">
            <Style Selector="^ /template/ Border">
                <Setter Property="CornerRadius"
                        Value="{TemplateBinding CornerRadius, Converter={StaticResource BottomRadius}}">
                </Setter>
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="CornerRadius"
                        Value="{TemplateBinding CornerRadius, Converter={StaticResource BottomRadius}}">
                </Setter>
            </Style>
        </Style>

        <Style Selector="^[IsDefault=True]">
            <Setter Property="Foreground" Value="{DynamicResource BlockOnPrimaryBrush}" />
            <Style Selector="^ /template/ Border#ButtonBackground">
                <Setter Property="Background" Value="{DynamicResource BlockBasePrimaryBrush}" />
                <Setter Property="Opacity" Value="1" />
            </Style>
            <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource BlockTransparentHighlightBrush}" />
            </Style>
            <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Background" Value="{DynamicResource BlockTransparentShadeBrush}" />
            </Style>
            <Style Selector="^ /template/ Border#FocusVisual">
                <Setter Property="Margin" Value="{DynamicResource BlockFocusBorderThickness}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BlockOnPrimaryBrush}" />
                <Setter Property="CornerRadius">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource InnerRadius}">
                            <TemplateBinding Property="CornerRadius" />
                            <DynamicResource ResourceKey="BlockFocusBorderThickness" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>