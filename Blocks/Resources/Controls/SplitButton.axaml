<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:blk="clr-namespace:Blocks.Controls"
                    xmlns:conv="clr-namespace:Blocks.Converters">
    <Design.PreviewWith>
        <Border Background="{DynamicResource BlockWindowBackgroundBrush}"
                Padding="10" Height="300">
            <WrapPanel ItemSpacing="10" LineSpacing="10">
                <SplitButton VerticalAlignment="Top">
                    <SplitButton.Flyout>
                        <Flyout>
                            <TextBlock Margin="10">Flyout</TextBlock>
                        </Flyout>
                    </SplitButton.Flyout>
                    Split Button
                </SplitButton>
                <SplitButton VerticalAlignment="Top"
                             Classes="opaque burger">
                    <SplitButton.Flyout>
                        <Flyout>
                            <TextBlock Margin="10">Flyout</TextBlock>
                        </Flyout>
                    </SplitButton.Flyout>
                    Split Button
                </SplitButton>
                <SplitButton VerticalAlignment="Top" Classes="flat" blk:Block.ActiveForeground="DeepPink">
                    <SplitButton.Flyout>
                        <Flyout>
                            <TextBlock Margin="10">Flyout</TextBlock>
                        </Flyout>
                    </SplitButton.Flyout>
                    Flat
                </SplitButton>
            </WrapPanel>
        </Border>
    </Design.PreviewWith>
    
    <!-- ****************************************************** -->
    <!-- ********************* Resources ********************** -->
    <!-- ****************************************************** -->

    <SolidColorBrush x:Key="BlockSplitButtonBaseBackgroundBrush"
                     Color="{DynamicResource BlockBaseButtonBackgroundColor}" />

    <SolidColorBrush x:Key="BlockSplitButtonForegroundBrush"
                     Color="{DynamicResource BlockButtonForegroundColor}" />

    <SolidColorBrush x:Key="BlockFlatSplitButtonForegroundBrush"
                     Color="{DynamicResource BlockFlatButtonForegroundColor}" />
    
    <SolidColorBrush x:Key="BlockSplitButtonActiveChevronBrush"
                     Color="{DynamicResource BlockBasePrimaryColor}" />

    <SolidColorBrush x:Key="BlockFlatSplitButtonDividerBrush"
                     Color="{DynamicResource BlockBaseButtonBackgroundColor}"
                     Opacity="{DynamicResource BlockSeparatorOpacity}" />
    
    <SolidColorBrush x:Key="BlockOpaqueSplitButtonBackgroundBrush" 
                     Color="{DynamicResource BlockOpaqueButtonBackgroundColor}" />
    
    <SolidColorBrush x:Key="BlockOpaqueSplitButtonForegroundBrush"
                     Color="{DynamicResource BlockOpaqueButtonForegroundColor}"/>
    
    <x:Double x:Key="BlockSplitButtonGap">1</x:Double>
    <blk:AnimatedMenuIconStyle x:Key="BlockSplitButtonMenuIconStyle">Chevron</blk:AnimatedMenuIconStyle>

    <!-- ****************************************************** -->
    <!-- ********************** Themes ************************ -->
    <!-- ****************************************************** -->

    <ControlTheme x:Key="{x:Type SplitButton}" TargetType="SplitButton">

        <Setter Property="Background" Value="{DynamicResource BlockSplitButtonBaseBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlockSplitButtonForegroundBrush}" />
        <Setter Property="Padding" Value="{DynamicResource BlockButtonPadding}" />
        <Setter Property="CornerRadius" Value="{DynamicResource BlockButtonCornerRadius}" />
        <Setter Property="FontWeight" Value="{DynamicResource BlockButtonFontWeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="MinHeight" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="True" />

        <Setter Property="Template">
            <ControlTemplate>
                <!-- I had strange rendering artefacts surfacing when you repeatedly press the primary button.
                    That clip border fixes it. -->
                <Border CornerRadius="{TemplateBinding CornerRadius}"
                        ClipToBounds="True"
                        Background="Transparent">
                    <Grid ColumnDefinitions="*,Auto,Auto">
                        
                        <Button x:Name="PART_PrimaryButton"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                Command="{TemplateBinding Command}"
                                CommandParameter="{TemplateBinding CommandParameter}"
                                CornerRadius="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectLeftRadius}}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Padding="{TemplateBinding Padding}"
                                KeyboardNavigation.IsTabStop="{TemplateBinding IsTabStop}">
                        </Button>

                        <Rectangle x:Name="SeparatorBorder"
                                   Grid.Column="1"
                                   Fill="Transparent"
                                   Width="{DynamicResource BlockSplitButtonGap}" />

                        <Button x:Name="PART_SecondaryButton"
                                Grid.Column="2"
                                MinWidth="{Binding $self.Bounds.Height}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Foreground="{TemplateBinding Foreground}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectRightRadius}}"
                                Padding="0"
                                VerticalContentAlignment="Stretch"
                                HorizontalContentAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                KeyboardNavigation.IsTabStop="{TemplateBinding IsTabStop}">
                            <blk:AnimatedMenuIcon Name="MenuIcon"
                                                  MenuIconStyle="{DynamicResource BlockSplitButtonMenuIconStyle}"
                                                  Background="{TemplateBinding Foreground}"
                                                  Foreground="{DynamicResource BlockSplitButtonActiveChevronBrush}" />
                        </Button>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>

        <!-- Classes -->

        <Style Selector="^.flat">
            <Setter Property="Foreground" Value="{DynamicResource BlockFlatButtonForegroundBrush}" />
            <Style Selector="^ /template/ Rectangle#SeparatorBorder">
                <Setter Property="Fill" Value="{DynamicResource BlockFlatSplitButtonDividerBrush}" />
            </Style>
            <Style Selector="^ /template/ Button#PART_PrimaryButton">
                <Setter Property="blk:Block.IsFlat" Value="True" />
            </Style>
            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="blk:Block.IsFlat" Value="True" />
            </Style>
        </Style>

        <Style Selector="^:flyout-open /template/ blk|AnimatedMenuIcon#MenuIcon">
            <Setter Property="DrawExpanded" Value="True" />
        </Style>
        <Style Selector="^:flyout-open /template/ Button">
            <Setter Property="Tag" Value="flyout-open" />
        </Style>

        <Style Selector="^.image-button">
            <Setter Property="Padding" Value="{DynamicResource BlockImageButtonPadding}" />
        </Style>
        
        <Style Selector="^.burger /template/ blk|AnimatedMenuIcon#MenuIcon">
            <Setter Property="MenuIconStyle" Value="Burger" />
        </Style>
        
        <Style Selector="^.opaque">
            <Setter Property="Foreground" Value="{DynamicResource BlockOpaqueComboBoxForegroundBrush}" />
            <Setter Property="Background" Value="{DynamicResource BlockOpaqueComboBoxBackgroundBrush}" />
            <Style Selector="^ /template/ Button#PART_PrimaryButton, ^ /template/ Button#PART_SecondaryButton">
                <Setter Property="blk:Block.IsOpaque" Value="True" />
            </Style>
            <Style Selector="^ /template/ blk|AnimatedMenuIcon">
                <Setter Property="Foreground" Value="{TemplateBinding Foreground}" />
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>