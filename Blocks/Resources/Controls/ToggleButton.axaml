<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:blk="clr-namespace:Blocks.Controls"
                    xmlns:conv="clr-namespace:Blocks.Converters">
    
    <Design.PreviewWith>
        <Border Background="{DynamicResource BlockWindowBackgroundColor}" Padding="20">
            <WrapPanel Width="300" ItemSpacing="10" LineSpacing="10">
                <ToggleButton>Basic Toggle Button</ToggleButton>
                <ToggleButton Classes="image-button">
                    <Path Data="{StaticResource BlockTestIcon}"
                          Width="{DynamicResource BlockIconSize}"
                          Height="{DynamicResource BlockIconSize}"
                          Stretch="Uniform"
                          Fill="{Binding $parent[ToggleButton].Foreground}" />
                </ToggleButton>
                <ToggleButton Classes="image-button flat">
                    <Path Data="{StaticResource BlockTestIcon}"
                          Width="{DynamicResource BlockIconSize}"
                          Height="{DynamicResource BlockIconSize}"
                          Stretch="Uniform"
                          Fill="{Binding $parent[ToggleButton].Foreground}" />
                </ToggleButton>
                <ToggleButton Classes="image-button flat hide-checked">
                    <Panel>
                        <PathIcon Data="{StaticResource BlockTestIcon}"
                                  Foreground="{Binding $parent[ToggleButton].Foreground}"
                                  IsVisible="{Binding $parent[ToggleButton].IsChecked}" />
                        <PathIcon Data="{StaticResource BlockTestIconH}"
                                  Foreground="{Binding $parent[ToggleButton].Foreground}"
                                  IsVisible="{Binding !$parent[ToggleButton].IsChecked}" />
                    </Panel>
                </ToggleButton>
            </WrapPanel>
        </Border>
    </Design.PreviewWith>
    
    <SolidColorBrush x:Key="BlockToggleButtonCheckedBackgroundBrush" Color="{DynamicResource BlockBasePrimaryColor}" />
    <SolidColorBrush x:Key="BlockToggleButtonCheckedForegroundBrush" Color="{DynamicResource BlockOnPrimaryColor}" />
    
    <ControlTheme x:Key="{x:Type ToggleButton}"
                  TargetType="ToggleButton">

        <Setter Property="Background" Value="{DynamicResource BlockBaseButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BlockButtonForegroundBrush}" />
        <Setter Property="Padding" Value="{DynamicResource BlockButtonPadding}" />
        <Setter Property="CornerRadius" Value="{DynamicResource BlockButtonCornerRadius}" />
        <Setter Property="FontWeight" Value="{DynamicResource BlockButtonFontWeight}" />
        <Setter Property="MinWidth" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="MinHeight" Value="{DynamicResource BlockMinButtonSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />

        <Setter Property="Template">
            <ControlTemplate>
                <Panel Name="BaseContainer">
                    <blk:BlockButton Name="ButtonBackground"
                                     Background="{TemplateBinding Background}"
                                     CornerRadius="{TemplateBinding CornerRadius}" />
                    <ContentPresenter Name="PART_ContentPresenter"
                                      IsHitTestVisible="False"
                                      CornerRadius="{TemplateBinding CornerRadius}"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      RecognizesAccessKey="True"
                                      TextElement.Foreground="{TemplateBinding Foreground}">
                    </ContentPresenter>
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="Highlighted" Value="True" />
        </Style>

        <Style Selector="^:pressed /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="Shaded" Value="True" />
        </Style>

        <Style Selector="^:disabled /template/ Panel#BaseContainer">
            <Setter Property="Opacity" Value="{DynamicResource BlockDisabledOpacity}" />
        </Style>

        <Style Selector="^:focus-visible /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="Focused" Value="True" />
        </Style>

        <!-- Classes -->
        <Style Selector="^.image-button">
            <Setter Property="Padding" Value="{DynamicResource BlockImageButtonPadding}" />
        </Style>

        <Style Selector="^.flat">
            <Style Selector="^ /template/ blk|BlockButton#ButtonBackground">
                <Setter Property="Flat" Value="True" />
            </Style>
            <Setter Property="Foreground" Value="{DynamicResource BlockFlatButtonForegroundBrush}" />
        </Style>

        <Style Selector="^.hide-checked"></Style>

        <Style Selector="^:checked:not(.hide-checked)">
            <Setter Property="Foreground" Value="{DynamicResource BlockToggleButtonCheckedForegroundBrush}" />
            <Style Selector="^ /template/ blk|BlockButton#ButtonBackground">
                <Setter Property="Opaque" Value="True" />
                <Setter Property="Background" Value="{DynamicResource BlockToggleButtonCheckedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BlockToggleButtonCheckedForegroundBrush}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource BlockToggleButtonCheckedForegroundBrush}" />
            </Style>
        </Style>

        <Style Selector="^.pill-left /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius"
                    Value="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectLeftRadius}}">
            </Setter>
        </Style>

        <Style Selector="^.pill-center /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius" Value="0">
            </Setter>
        </Style>

        <Style Selector="^.pill-right /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius"
                    Value="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectRightRadius}}">
            </Setter>
        </Style>

        <Style Selector="^.pill-top /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius"
                    Value="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectTopRadius}}">
            </Setter>
        </Style>

        <Style Selector="^.pill-bottom /template/ blk|BlockButton#ButtonBackground">
            <Setter Property="CornerRadius"
                    Value="{TemplateBinding CornerRadius, Converter={x:Static conv:BlockConverters.SelectBottomRadius}}">
            </Setter>
        </Style>
    </ControlTheme>
</ResourceDictionary>